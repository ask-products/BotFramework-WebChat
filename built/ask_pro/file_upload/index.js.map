{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/ask_pro/file_upload/index.tsx"],"names":[],"mappings":"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","sourcesContent":["\nimport axios from 'axios';\n// const ax = axios.create({ baseURL: '', timeout: 1000, headers: '' }); //short timout for testing\nconst ax = axios.create({ baseURL: '', timeout: 30000, headers: '' });\n\nconst getSignedUrl = async (file: any) => {\n    const authResult = JSON.parse(localStorage.getItem('auth_result'));\n    let info: any;\n    if( authResult ) {\n        const profile = authResult.idTokenPayload;\n        const key = 'https://api-re-porter.co/_app_metadata';\n        info = profile[key];\n    } else {\n        info = {domain:'acme', identifier:'00000000'}\n    }\n    const ident = info.identifier.slice(1);\n\n    return ax.request({\n        url:        'https://j0gzx3un1j.execute-api.eu-west-1.amazonaws.com/dev/gen',\n        method:     'GET',\n        params:     {\n                        fileType: file.type,\n                        fileName: info.domain+'/'+ident+'/'+file.name\n                    }\n    }).catch((err) => {\n        throw {err: err, file: file.name};\n    })\n    .then((r) => {\n        return ({\n            status:     r.status,\n            data :      r.data,\n            fileName:   info.domain+'/'+ident+'/'+file.name\n        });\n    });\n}\nconst putFile = async (response: any, file: any) => {\n    return ax.request({\n        url:        response.data.url,\n        method:     'PUT',\n        headers:    { 'content-type': file.type },\n        data:       file\n    })\n    .catch((err) => {\n        throw {err: err, file: file.name};\n    })\n    .then((r) => {\n        return ({\n            contentUrl:     'https://s3-eu-west-1.amazonaws.com/re-porter-customer-files/' + response.fileName,\n            contentType:    file.type,\n            name:           file.name\n        });\n    });\n}\nconst apUriFromFiles = (files: any) =>{\n    let fileNames: any = [];\n    let calls: any = [];\n    for(let userFile of files) {\n        fileNames.push(userFile.name);\n        calls.push( getSignedUrl(userFile)\n                    .then((r: any) => {\n                        if( r.status === 200 ){\n                            return(putFile(r,userFile));\n                        } else {\n                            console.log('error', r.status);\n                        }\n                    })\n        )\n    }\n    return [calls, fileNames];\n}\n\nexport { apUriFromFiles }\n"]}